version: "3"
services: 
    database:
        image: "mysql:5.6"
        container_name: "workflow-db"
        ports: 
            - "3366:3306"
        environment:
            MYSQL_ROOT_PASSWORD: 123456
            MYSQL_DATABASE: workflow
        volumes:
            - ./db-init/workflow-init.sql:/docker-entrypoint-initdb.d/init.sql
    
    zookeeper:
        image: strimzi/kafka:0.19.0-kafka-2.5.0
        container_name: "zookeeper"
        command: [
                "sh", "-c",
                "bin/zookeeper-server-start.sh config/zookeeper.properties"
        ]
        ports:
            - "2181:2181"
        environment:
            LOG_DIR: /tmp/logs

    kafka:
        image: strimzi/kafka:0.19.0-kafka-2.5.0
        container_name: "kafka"
        command: [
                "sh", "-c",
                "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
        ]
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            LOG_DIR: "/tmp/logs"
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

    redis:
        image: redis:5.0-alpine
        container_name: "redis"
        ports:
            - "6379:6379"

    workflow:
        image: quarkus/scheduler-jvm
        container_name: "workflow"
        restart: on-failure
        ports:
            - "8080:8080"
        depends_on:
            - database
            - kafka
            - redis
